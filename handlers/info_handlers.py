# handlers/info_handlers.py
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from config.messages import MESSAGES
from handlers.common import get_back_keyboard


async def show_info_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é '–î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'."""
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üó∫Ô∏è –ù–∞—à—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (—Å—Ö–µ–º–∏)", callback_data="info:routes")],
        [InlineKeyboardButton("üìú –ü—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è", callback_data="info:rules")],
        [InlineKeyboardButton("‚ôø –î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å (–Ü–Ω–∫–ª—é–∑–∏–≤–Ω—ñ—Å—Ç—å)", callback_data="info:accessibility")],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏", callback_data="info:contacts")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]

    await query.edit_message_text(
        text="‚ÑπÔ∏è –†–æ–∑–¥—ñ–ª '–î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'. –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


async def handle_info_static(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –≤—Å—ñ —Å—Ç–∞—Ç–∏—á–Ω—ñ –ø—ñ–¥-–º–µ–Ω—é '–î–æ–≤—ñ–¥–∫–∏'."""
    query = update.callback_query
    await query.answer()

    key = query.data.split(":")[1]

    # –î–ª—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —Ç–∞ –ø—Ä–∞–≤–∏–ª –º–∏ –º–æ–∂–µ–º–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ñ–∞–π–ª–∏, –∞–ª–µ –ø–æ–∫–∏ –Ω–∞–¥—ñ—à–ª–µ–º–æ —Ç–µ–∫—Å—Ç
    if key == "routes":
        # –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —á–∏ –∫–Ω–æ–ø–æ–∫ –∑ –Ω–æ–º–µ—Ä–∞–º–∏
        text = MESSAGES.get("info_routes", "–¢—É—Ç –±—É–¥–µ —Å–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç—ñ–≤...")
    elif key == "rules":
        # –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ PDF
        # await context.bot.send_document(chat_id=query.effective_chat.id, document=open('path/to/rules.pdf', 'rb'))
        text = MESSAGES.get("info_rules", "–¢—É—Ç –±—É–¥–µ PDF –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏...")
    else:
        text = MESSAGES.get(f"info_{key}", "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.")

    keyboard = await get_back_keyboard("info_menu")
    await query.edit_message_text(text=text, reply_markup=keyboard)