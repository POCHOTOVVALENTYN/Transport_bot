# handlers/suggestion_handlers.py
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler, CommandHandler
from services.tickets_service import TicketsService
from handlers.common import get_back_keyboard
from bot.states import States
from utils.logger import logger


async def suggestion_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ –∑–±–æ—Ä—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó."""
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("üí° –û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é:")
    return States.SUGGESTION_TEXT


async def suggestion_get_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó."""
    context.user_data['suggestion_text'] = update.message.text
    logger.info(f"Suggestion: {update.message.text[:50]}")
    await update.message.reply_text(
        "–í–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ (–ü–Ü–ë, —Ç–µ–ª–µ—Ñ–æ–Ω) –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É (–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º). \n–ê–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /skip, —â–æ–± –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏.")
    return States.SUGGESTION_CONTACT


async def suggestion_save(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏."""
    contact = update.message.text
    await _save_suggestion(update, context, contact)
    return ConversationHandler.END


async def suggestion_skip_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤."""
    await _save_suggestion(update, context, "N/A")
    return ConversationHandler.END


async def _save_suggestion(update: Update, context: ContextTypes.DEFAULT_TYPE, contact: str):
    """–í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó."""
    try:
        service = TicketsService()
        result = await service.create_suggestion_ticket(
            telegram_id=update.effective_user.id,
            text=context.user_data.get('suggestion_text'),
            contact_info=contact
        )

        keyboard = [[InlineKeyboardButton("üè† –ú–µ–Ω—é", callback_data="main_menu")]]
        await update.message.reply_text(result['message'], reply_markup=InlineKeyboardMarkup(keyboard))
        logger.info(f"Suggestion saved: {result.get('ticket_id')}")

    except Exception as e:
        logger.error(f"Error saving suggestion: {e}")
        await update.message.reply_text("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó.")

    context.user_data.clear()