# handlers/museum_handlers.py
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes, ConversationHandler
from config.messages import MESSAGES
from handlers.common import get_back_keyboard
from bot.states import States
from utils.logger import logger


async def show_museum_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é '–ú—É–∑–µ–π'."""
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üñºÔ∏è –Ü–Ω—Ñ–æ –ø—Ä–æ –º—É–∑–µ–π", callback_data="museum:info")],
        [InlineKeyboardButton("üì± –°–æ—Ü. –º–µ—Ä–µ–∂—ñ –º—É–∑–µ—é", callback_data="museum:socials")],
        [InlineKeyboardButton("üóìÔ∏è –ó–∞–ø–∏—Å –Ω–∞ –µ–∫—Å–∫—É—Ä—Å—ñ—é", callback_data="museum:register_start")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]

    await query.edit_message_text(
        text="üèõÔ∏è –†–æ–∑–¥—ñ–ª '–ú—É–∑–µ–π –ö–ü '–û–ú–ï–¢''. –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


async def handle_museum_static(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î —Å—Ç–∞—Ç–∏—á–Ω—ñ –ø—ñ–¥-–º–µ–Ω—é '–ú—É–∑–µ–π'."""
    query = update.callback_query
    await query.answer()

    key = query.data.split(":")[1]
    text = MESSAGES.get(f"museum_{key}", "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.")

    keyboard = await get_back_keyboard("museum_menu")
    await query.edit_message_text(text=text, reply_markup=keyboard, disable_web_page_preview=True)


# --- ConversationHandler –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó ---

async def museum_register_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—á–∞—Ç–æ–∫ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –¥–æ –º—É–∑–µ—é."""
    query = update.callback_query
    await query.answer()

    # –¢—É—Ç –º–æ–∂–µ –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–∞—Ç–∏
    nearest_date = "25.11.2025"

    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –¢–∞–∫, –≤–ª–∞—à—Ç–æ–≤—É—î", callback_data=f"museum_date:{nearest_date}"),
            InlineKeyboardButton("üìÖ –û–±—Ä–∞—Ç–∏ —ñ–Ω—à—É", callback_data="museum_date:other")
        ],
        [InlineKeyboardButton("‚¨ÖÔ∏è –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="museum_menu")]
    ]

    await query.edit_message_text(
        text=f"–ù–∞–π–±–ª–∏–∂—á–∞ –≤—ñ–ª—å–Ω–∞ –¥–∞—Ç–∞ –¥–ª—è –≥—Ä—É–ø–æ–≤–æ—ó –µ–∫—Å–∫—É—Ä—Å—ñ—ó: {nearest_date}. –í–∞—Å –≤–ª–∞—à—Ç–æ–≤—É—î?",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return States.MUSEUM_DATE


async def museum_get_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º—É—î –¥–∞—Ç—É (–∑–∞—Ä–∞–∑ –∑–∞–≥–ª—É—à–∫–∞)."""
    query = update.callback_query
    await query.answer()

    if "other" in query.data:
        await query.edit_message_text(
            text="–î–ª—è –≤–∏–±–æ—Ä—É —ñ–Ω—à–æ—ó –¥–∞—Ç–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—É: 050-399-42-11",
            reply_markup=await get_back_keyboard("museum_menu")
        )
        return ConversationHandler.END

    context.user_data['museum_date'] = query.data.split(":")[1]
    await query.edit_message_text("–í–∫–∞–∂—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–± —É –≤–∞—à—ñ–π –≥—Ä—É–ø—ñ (–Ω–∞–ø–∏—à—ñ—Ç—å —Ü–∏—Ñ—Ä–æ—é):")
    return States.MUSEUM_PEOPLE_COUNT


async def museum_get_people_count(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Ä–∏–º—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–±."""
    try:
        count = int(update.message.text)
    except ValueError:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ. –°–∫—ñ–ª—å–∫–∏ –æ—Å—ñ–±?")
        return States.MUSEUM_PEOPLE_COUNT

    if count == 1:
        await update.message.reply_text(
            "–ù–∞ –∂–∞–ª—å, –µ–∫—Å–∫—É—Ä—Å—ñ—ó –ø—Ä–æ–≤–æ–¥—è—Ç—å—Å—è –¥–ª—è –≥—Ä—É–ø –≤—ñ–¥ 2-—Ö –æ—Å—ñ–±. "
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ 050-399-42-11, –º–æ–∂–ª–∏–≤–æ, –º–∏ –∑–º–æ–∂–µ–º–æ –¥–æ–¥–∞—Ç–∏ –≤–∞—Å –¥–æ –≤–∂–µ —ñ—Å–Ω—É—é—á–æ—ó –≥—Ä—É–ø–∏.",
            reply_markup=await get_back_keyboard("museum_menu")
        )
        return ConversationHandler.END

    if count > 10:
        await update.message.reply_text(
            "–î–ª—è –≥—Ä—É–ø –ø–æ–Ω–∞–¥ 10 –æ—Å—ñ–± –ø–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—å. "
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—É –∑–∞ –Ω–æ–º–µ—Ä–æ–º 050-399-42-11.",
            reply_markup=await get_back_keyboard("museum_menu")
        )
        return ConversationHandler.END

    context.user_data['museum_people_count'] = count
    await update.message.reply_text("–ß—É–¥–æ–≤–æ! –í–∫–∞–∂—ñ—Ç—å –í–∞—à—ñ –ü–Ü–ë —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.")
    return States.MUSEUM_CONTACT_INFO


async def museum_save_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–±–µ—Ä—ñ–≥–∞—î —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é."""
    contact_info = update.message.text

    # –¢—É—Ç –ª–æ–≥—ñ–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è (–Ω–∞–ø—Ä., –≤ Google Sheets –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∞–¥–º—ñ–Ω—É)
    logger.info(f"New museum registration: {context.user_data['museum_date']}, "
                f"{context.user_data['museum_people_count']} people, contact: {contact_info}")

    await update.message.reply_text(
        "‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞. –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.",
        reply_markup=await get_back_keyboard("main_menu")
    )
    context.user_data.clear()
    return ConversationHandler.END